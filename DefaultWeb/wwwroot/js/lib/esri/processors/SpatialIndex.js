//>>built
define("../core/declare dojo/Deferred dojo/_base/lang ./Processor ../workers/WorkerClient ../layers/FeatureLayer".split(" "),function(n,k,p,q,l,r){return n([q],{declaredClass:"esri.processors.SpatialIndex",index:null,indexType:"rtree",autostart:!1,constructor:function(a){a=a||{};var b=!1!==a.autostart;if(p.mixin(this,a),this.workerCallback=["./scripts/helpers","./scripts/indexInterface","./indexWorker"],!this.fetchWithWorker){var d=this;this.workerClient=new l("./mutableWorker",function(a){this.workerClient=
a;this.workerCallback.push("./libs/"+this.indexType);this.workerClient.importScripts(this.workerCallback).then(function(){d._attachedSystem=!0;b&&d.start()})}.bind(this))}this._featCache={}},destroy:function(){this.workerClient&&this.workerClient.terminate()},addLayer:function(a,b){if(a.graphics&&a.graphics.length||b||a.isInstanceOf(r)){var d=this.workerClient;if(!this._attachedSystem&&d.worker){var e=this;this.inherited(arguments,[a,!0]);d.importScripts("./libs/"+this.indexType).then(function(){e.runProcess(a.graphics,
a.id);e._attachedSystem=!0})}else this.inherited(arguments,[a])}},unsetMap:function(){this.stop();this.workerClient.terminate();this.fetchWithWorker||(this.workerClient=new l(this.workerCallback,function(){}));this.inherited(arguments);this.start()},removeLayer:function(a){this.inherited(arguments)},runProcess:function(a,b){if(a&&a.length){var d=this,e=this.workerClient,c=a[0]._graphicsLayer;b||0===b||(b=c?c.id:"rawFeatures_"+Object.keys(this._featCache).length);this._featCache[b]||(this._featCache[b]=
{});for(var g,f,h=[],m=a.length,k=c&&c.objectIdField;m--;)f=a[m],g=f.attributes&&k?f.attributes[k]:f.id,null!=g&&this._featCache[b][g]||(this._featCache[b][g]=1,f.declaredClass?h.push({id:g,geometry:f.geometry.toJSON(!0),attributes:f.attributes}):h.push(f));0!==h.length&&(e.postMessage({insert:h,system:this.indexType,options:this.indexOptions,idField:c&&c.objectIdField,layerId:b}).then(function(a){c&&c.emit("process-end",{processor:d,results:{insert:a.insert}})}),c&&c.emit("process-start",{processor:this}))}},
_sendFeaturesFromLayer:function(a,b){b=b.graphic;var d=this.workerClient,e=this,c=b.attributes[a.objectIdField];this._featCache[a.id]||(this._featCache[a.id]={});this._featCache[a.id][c]||(this._featCache[a.id][c]=1,d.postMessage({insert:[{attributes:b.attributes,geometry:b.geometry.toJSON(!0)}],system:this.indexType,options:this.indexOptions,idField:a.objectIdField,layerId:a.id}).then(function(b){a.emit("process-end",{processor:e,results:{insert:b.insert}})}),a.emit("process-start",{processor:e}))},
_notifyProcessStart:function(a,b){},_sendFeaturesFromTask:function(a,b){var d,e=b.featureSet.features,c=[],g=this.workerClient,f=this,h=e.length;for(this._featCache[a.id]||(this._featCache[a.id]={});h--;)d=e[h],b=d.attributes[a.objectIdField],this._featCache[a.id][b]||(this._featCache[a.id][b]=1,c.push(d));g.postMessage({insert:c,system:this.indexType,options:this.indexOptions,idField:a.objectIdField,layerId:a.id}).then(function(b){a.emit("process-end",{processor:f,results:{insert:b.insert}})});a.emit("process-start",
{processor:f})},get:function(){},intersects:function(a,b,d,e){var c;return"rtree"!=this.indexType?(console.error("Index.intersects only works with rtree indexes"),c=new k,c.reject({message:"Index.intersects only works with rtree indexes"}),c.promise):this.workerClient.postMessage({search:a,layerId:b,returnNode:d,onlyIds:e})},within:function(a,b,d){var e;if("rtree"!=this.indexType)return console.error("Index.within only works with rtree indexes"),e=new k,e.reject({message:"Index.within only works with rtree indexes"}),
e.promise},nearest:function(a){var b;return"kdtree"!=this.indexType?(console.error("Index.nearest only works with kdtree indexes"),b=new k,b.reject({message:"Index.nearest only works with kdtree indexes"}),b.promise):this.workerClient.postMessage({search:a})}})});