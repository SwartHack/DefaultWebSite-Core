//>>built
define("require exports dojo/i18n!../../nls/smartMapping dojo/_base/lang ../statistics/summaryStatistics ../symbology/color ../../../core/numberUtils ../../support/utils ../../ClassBreaksRenderer ../../../core/promiseUtils ../../PointCloudRGBRenderer ../../PointCloudStretchRenderer ./support/utils ../support/utils ../../support/utils ../../support/AuthoringInfoVisualVariable ../../support/AuthoringInfo ../statistics/support/utils".split(" "),function(V,h,v,g,y,m,E,q,z,d,F,G,e,f,H,I,A,J){function K(a){if(!(a&&
a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("color-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=g.mixin({},a);a=[0,1];var c=f.createLayerAdapter(b.layer,a);return b.layer=c,c?c.load().then(function(){var a=c.geometryType;if("mesh"!==a&&b.worldScale){if("polyline"===a||"polygon"===a)return d.reject(e.createError("color-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));
if(!b.view||"3d"!==b.view.type)return d.reject(e.createError("color-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"color-visual-variable:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-visual-variable:invalid-parameters","'layer' must be one of these types: "+
f.getLayerTypeLabels(a).join(", ")))}function L(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("color-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=g.mixin({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,1];var c=f.createLayerAdapter(b.layer,a);return b.layer=c,c?c.load().then(function(){var a=
c.geometryType,k=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=b.colorMixMode||"replace";else{if(k&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=
f.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"color-continuous-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function M(a){if(!(a&&a.layer&&a.field))return d.reject(e.createError("color-class-breaks-renderer:missing-parameters","'layer' and 'field' parameters are required"));
var b=g.mixin({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;b.classificationMethod=b.classificationMethod||"equal-interval";b.normalizationType=J.getNormalizationType(b);a=[0,1];var c=f.createLayerAdapter(b.layer,a);return(b.layer=c,c)?null!=b.minValue&&null!=b.maxValue||null==b.minValue&&null==b.maxValue?c.load().then(function(){var a=c.geometryType,k=-1<b.symbolType.indexOf("3d");if("mesh"===a)b.symbolType="3d-volumetric",b.colorMixMode=
b.colorMixMode||"replace";else{if(k&&("polyline"===a||"polygon"===a))return d.reject(e.createError("color-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("color-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'"))}a=f.getFieldsList({field:b.field,
normalizationField:b.normalizationField});return(a=e.verifyBasicFieldValidity(c,a,"color-class-breaks-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("color-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range")):d.reject(e.createError("color-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", ")))}function N(a){a=g.mixin({},a);delete a.basemap;delete a.colorScheme;
delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;delete a.view;return a.analyzeData=!(null!=a.minValue&&null!=a.maxValue),a}function O(a){if(!a||!a.layer)return d.reject(e.createError("color-point-cloud-true-color-renderer:missing-parameters","'layer' parameter is required"));var b=g.mixin({},a);a=[2];var c=f.createLayerAdapter(b.layer,a);return b.layer=c,b.density=b.density||25,b.size=b.size||"100%",e.isValidPointSize(b.size)?c?c.load().then(function(){return b}):
d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):d.reject(e.createError("color-point-cloud-true-color-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function P(a){if(!(a&&a.layer&&a.field))return d.reject(e.createError("color-point-cloud-continuous-renderer:missing-parameters","'layer' and 'field' parameters are required"));var b=a.field.toLowerCase();
if("intensity"!==b&&"elevation"!==b)return d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","'field' should be either 'intensity' or 'elevation'"));var c=g.mixin({},a);a=[2];b=f.createLayerAdapter(c.layer,a);return c.layer=b,c.density=c.density||25,c.size=c.size||"100%",e.isValidPointSize(c.size)?b?b.load().then(function(){return c}):d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+f.getLayerTypeLabels(a).join(", "))):
d.reject(e.createError("color-point-cloud-continuous-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'"))}function Q(a){a=g.mixin({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");delete a.symbolType;delete a.defaultSymbolEnabled;delete a.colorMixMode;return a.worldScale=b,a}function x(a,b){var c=a.colorScheme,e=a.basemap;if(c)c=m.cloneScheme(c);else{b=b||a.theme||R;var d=m.getSchemes({theme:b,basemap:a.basemap,geometryType:a.geometryType,worldScale:a.worldScale,
view:a.view});d&&(c=(e=d.basemapId,a.schemeId)?m.getSchemeById({id:b+"/"+e+"/"+a.schemeId,geometryType:a.geometryType}):d.primaryScheme)}return{scheme:c,basemapId:e}}function B(a,b,c){for(var e=(b-a)/(c-1),d=[a],l=1;c-2>=l;l++)d.push(a+l*e);return d.push(b),E.round(d,{strictBounds:!0})}function C(a){return K(a).then(function(a){var b,w=a.normalizationField,k=w?"field":void 0;return b=a.statistics?d.resolve(a.statistics):y({layer:a.layer,field:a.field,valueExpression:a.valueExpression,sqlExpression:a.sqlExpression,
sqlWhere:a.sqlWhere,normalizationType:k,normalizationField:w,minValue:a.minValue,maxValue:a.maxValue}),b.then(function(b){var c=a.layer,k=a.field,l=k&&"function"!=typeof k?c.getField(k):null,f=l&&l.type===S,c=x({basemap:a.basemap,theme:a.theme,geometryType:c.geometryType,colorScheme:a.colorScheme,worldScale:a.worldScale,view:a.view});if(l=c.scheme){var g=e.createColors(l.colors,u);if(g.length<u)b=d.reject(e.createError("color-visual-variable:insufficient-info","Color scheme does not have enough colors"));
else{var p=e.getDefaultDataRange(b,f,!0),r=-1<l.id.indexOf("seq-"),r=p?B(p[0],p[1],5):e.createStopValues(b,r),g=e.createColors(g,u),k={type:"color",field:k,valueExpression:a.valueExpression,normalizationField:w,stops:q.createColorStops({values:r,isDate:f,dateFormatOptions:f?q.timelineDateFormatOptions:null,colors:g,labelIndexes:[0,2,4]}),legendOptions:a.legendOptions},f=new I({type:"color",minSliderValue:b.min,maxSliderValue:b.max,theme:l.theme}),f=new A({visualVariables:[f]});b=d.resolve({basemapId:c.basemapId,
visualVariable:k,statistics:b,defaultValuesUsed:!!p,colorScheme:m.cloneScheme(l),authoringInfo:f})}}else b=d.reject(e.createError("color-visual-variable:insufficient-info","Unable to find color scheme"));return b})})}function T(a,b){var c;if((a=a.colorsForClassBreaks)&&0<a.length&&(a.some(function(a){return a.numClasses===b&&(c=a.colors),!!c}),!c)){var d=a[a.length-1];a=b-d.numClasses;if(0<a){var k=d.colors[d.numClasses-1];c=d.colors.splice(0);for(d=1;a>=d;d++)c.push(k)}}return c&&(c=e.createColors(c,
c.length)),c}function U(a,b){var c=a.field,f=a.defaultSymbolEnabled,k=a.layer.geometryType,l=x({basemap:a.basemap,geometryType:k,colorScheme:a.colorScheme,worldScale:-1<a.symbolType.indexOf("3d-volumetric"),view:a.view}),t=l.scheme,g=b.result,n=g.classBreakInfos,h=a.classificationMethod,q="standard-deviation"===h,p=a.normalizationType;if(!t)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info","Unable to find color scheme"));var r=T(t,n.length);if(!r||r.length!==n.length)return d.reject(e.createError("color-class-breaks-renderer:insufficient-info",
"Color scheme does not have enough colors"));c=new z({classBreakInfos:n.map(function(b,c){return{minValue:b.minValue,maxValue:b.maxValue,symbol:e.createSymbol(t,r[c],k,a.symbolType,a.colorMixMode),label:b.label}}),defaultLabel:f?v.other:null,defaultSymbol:f?e.createSymbol(t,t.noDataColor,k,a.symbolType,a.colorMixMode):null,field:c,classificationMethod:h,normalizationType:p,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===p?g.normalizationTotal:void 0,legendOptions:a.legendOptions,
authoringInfo:new A({type:"class-breaks-color",classificationMethod:h,standardDeviationInterval:a.standardDeviationInterval})});return q||H.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,classificationMethod:h,normalizationType:p,round:!0}),d.resolve({renderer:c,colorScheme:m.cloneScheme(t),classBreaksResult:g,defaultValuesUsed:b.defaultValuesUsed,basemapId:l.basemapId})}Object.defineProperty(h,"__esModule",{value:!0});var S="date",R="high-to-low",D=Math.pow(2,53)-1,u=5;h.createVisualVariable=
C;h.createContinuousRenderer=function(a){return L(a).then(function(a){return C(Q(a)).then(function(b){var c=a.normalizationField,d=c?"field":void 0,f=a.field,g=a.layer.geometryType,h=a.defaultSymbolEnabled,n=m.cloneScheme(b.colorScheme);return{renderer:new z({classBreakInfos:[{minValue:-D,maxValue:D,symbol:e.createSymbol(n,n.noDataColor,g,a.symbolType,a.colorMixMode)}],defaultLabel:h?v.other:null,defaultSymbol:h?e.createSymbol(n,n.noDataColor,g,a.symbolType,a.colorMixMode):null,field:f,normalizationType:d,
normalizationField:c,valueExpression:a.valueExpression,visualVariables:[q.cloneColorVariable(b.visualVariable)],authoringInfo:b.authoringInfo&&b.authoringInfo.clone()}),visualVariable:q.cloneColorVariable(b.visualVariable),statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:m.cloneScheme(b.colorScheme),basemapId:b.basemapId}})})};h.createClassBreaksRenderer=function(a){return M(a).then(function(a){return e.getClassBreaks(N(a)).then(function(b){return U(a,b)})})};h.createPCTrueColorRenderer=
function(a){return O(a).then(function(a){return{renderer:new F({field:"RGB",pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size)})}})};h.createPCContinuousRenderer=function(a){return P(a).then(function(a){return(a.statistics?d.resolve(a.statistics):y({layer:a.layer,field:a.field})).then(function(b){var c=x({basemap:a.basemap,colorScheme:a.colorScheme,geometryType:a.layer.geometryType,schemeId:"elevation"===a.field.toLowerCase()?"point-cloud-elevation-scheme":"point-cloud-intensity-scheme"}),
f=c.scheme;if(f){var g=e.createColors(f.colors,u);if(g.length<u)b=d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info","Color scheme does not have enough colors"));else{var h=e.getDefaultDataRange(b,!1,!0),v=h?B(h[0],h[1],5):e.createStopValues(b),g=q.createColorStops({values:v,isDate:!1,dateFormatOptions:null,colors:g,labelIndexes:[0,2,4]});b=d.resolve({stops:g,basemapId:c.basemapId,statistics:b,defaultValuesUsed:!!h,colorScheme:m.cloneScheme(f)})}}else b=d.reject(e.createError("color-point-cloud-continuous-renderer:insufficient-info",
"Unable to find color scheme"));return b}).then(function(b){return{renderer:new G({field:a.field,pointsPerInch:a.density,pointSizeAlgorithm:e.getPointSizeAlgorithm(a.size),stops:b.stops}),basemapId:b.basemapId,statistics:b.statistics,defaultValuesUsed:b.defaultValuesUsed,colorScheme:b.colorScheme}})})}});