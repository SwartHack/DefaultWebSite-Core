//>>built
define("require exports dojo/i18n!../../nls/smartMapping dojo/_base/lang ../../ClassBreaksRenderer ../statistics/summaryStatistics ../symbology/size ../../support/utils ../../../core/promiseUtils ./support/utils ../support/utils ../../support/utils ../../../core/screenUtils ../../support/AuthoringInfoVisualVariable ../../support/AuthoringInfo ../statistics/support/utils".split(" "),function(T,t,x,n,y,G,u,z,d,e,l,H,A,I,B,J){function K(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("size-visual-variable:missing-parameters",
"'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=n.mixin({},a);a=[0,1];var c=l.createLayerAdapter(b.layer,a);return b.layer=c,c?c.load().then(function(){var a=c.geometryType;if("mesh"===a)return d.reject(e.createError("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type"));if(b.worldScale){if("polyline"===a||"polygon"===a)return d.reject(e.createError("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers"));
if(!b.view||"3d"!==b.view.type)return d.reject(e.createError("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true"))}a=l.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"size-visual-variable:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+
l.getLayerTypeLabels(a).join(", ")))}function L(a){if(!(a&&a.layer&&(a.field||a.valueExpression||a.sqlExpression)))return d.reject(e.createError("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required"));var b=n.mixin({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;a=[0,1];var c=l.createLayerAdapter(b.layer,a);return b.layer=c,c?c.load().then(function(){var a=
c.geometryType,f=-1<b.symbolType.indexOf("3d");if("mesh"===a)return d.reject(e.createError("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type"));if(f&&("polyline"===a||"polygon"===a))return d.reject(e.createError("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==b.view.type))return d.reject(e.createError("size-continuous-renderer:invalid-parameters",
"'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform"));a=l.getFieldsList({field:b.field,normalizationField:b.normalizationField,valueExpression:b.valueExpression});return(a=e.verifyBasicFieldValidity(c,a,"size-continuous-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+l.getLayerTypeLabels(a).join(", ")))}function M(a){if(!(a&&
a.layer&&a.field))return d.reject(e.createError("size-class-breaks-renderer:missing-parameters","'layer' and 'field' parameters are required"));var b=n.mixin({},a);b.symbolType=b.symbolType||"2d";b.defaultSymbolEnabled=null==b.defaultSymbolEnabled?!0:b.defaultSymbolEnabled;b.classificationMethod=b.classificationMethod||"equal-interval";b.normalizationType=J.getNormalizationType(b);a=[0,1];var c=l.createLayerAdapter(b.layer,a);return(b.layer=c,c)?null!=b.minValue&&null!=b.maxValue||null==b.minValue&&
null==b.maxValue?c.load().then(function(){var a=c.geometryType,f=-1<b.symbolType.indexOf("3d");if("mesh"===a)return d.reject(e.createError("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type"));if(f&&("polyline"===a||"polygon"===a))return d.reject(e.createError("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers"));if(-1<b.symbolType.indexOf("3d-volumetric")&&(!b.view||"3d"!==
b.view.type))return d.reject(e.createError("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform"));a=l.getFieldsList({field:b.field,normalizationField:b.normalizationField});return(a=e.verifyBasicFieldValidity(c,a,"size-class-breaks-renderer:invalid-parameters"))?d.reject(a):b}):d.reject(e.createError("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range")):
d.reject(e.createError("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+l.getLayerTypeLabels(a).join(", ")))}function N(a){a=n.mixin({},a);delete a.basemap;delete a.sizeScheme;delete a.legendOptions;delete a.symbolType;delete a.defaultSymbolEnabled;delete a.view;return a.analyzeData=!(null!=a.minValue&&null!=a.maxValue),a}function O(a){a=n.mixin({},a);var b=-1<a.symbolType.indexOf("3d-volumetric");return a.worldScale=b,b&&(a.axis="3d-volumetric-uniform"===a.symbolType?
"all":"height"),delete a.symbolType,delete a.defaultSymbolEnabled,a}function C(a){var b=a.sizeScheme,c=a.basemap;b?b=u.cloneScheme(b):(b=(a=u.getSchemes({basemap:a.basemap,geometryType:a.geometryType,worldScale:a.worldScale,view:a.view}))&&a.primaryScheme,c=a&&a.basemapId);return{scheme:b,basemapId:c}}function D(a,b){var c;switch(b){case "point":case "multipoint":c=[a.minSize,a.maxSize];break;case "polyline":c=[a.minWidth,a.maxWidth];break;case "polygon":c=[a.marker.minSize,a.marker.maxSize]}return c}
function P(a,b,c,d){var f=d.field,h=d.layer.geometryType,q=d.defaultSymbolEnabled,g=u.cloneScheme(a.sizeScheme),r="polygon"===h,m=r?g.marker:g,k=r?g.background:null,g="polyline"===h?m.noDataWidth:m.noDataSize,k=k?e.createSymbol(k,k.color,h,d.symbolType):null;return{renderer:new y({backgroundFillSymbol:k,classBreakInfos:[{minValue:-E,maxValue:E,symbol:e.createSymbol(m,m.color,r?"point":h,d.symbolType)}],defaultLabel:q?x.other:null,defaultSymbol:q?e.createSymbol(m,m.noDataColor,r?"point":h,d.symbolType,
null,g):null,field:f,normalizationField:c,normalizationType:b,valueExpression:d.valueExpression,visualVariables:a.visualVariables.map(function(a){return z.cloneSizeVariable(a)}),authoringInfo:a.authoringInfo&&a.authoringInfo.clone()}),visualVariables:a.visualVariables.map(function(a){return z.cloneSizeVariable(a)}),statistics:a.statistics,defaultValuesUsed:a.defaultValuesUsed,sizeScheme:u.cloneScheme(a.sizeScheme),basemapId:a.basemapId}}function Q(a,b,c){b=D(a,b);a=A.toPt(b[0]);b=(A.toPt(b[1])-a)/
(4<=c?c-1:c);for(var d=[],e=0;c>e;e++)d.push(a+b*e);return d}function R(a,b){var c=a.field,q=a.defaultSymbolEnabled,f=a.layer.geometryType,h="polygon"===f,l=C({basemap:a.basemap,geometryType:f,sizeScheme:a.sizeScheme,worldScale:-1<a.symbolType.indexOf("3d-volumetric"),view:a.view}),g=l.scheme,r=b.result,m=r.classBreakInfos,k=a.classificationMethod,v=a.normalizationType,n=Q(g,f,m.length),p=h?g.marker:g,w=h?g.background:null,t="polyline"===f?p.noDataWidth:p.noDataSize,c=new y({backgroundFillSymbol:w?
e.createSymbol(w,w.color,f,a.symbolType):null,classBreakInfos:m.map(function(b,c){return{minValue:b.minValue,maxValue:b.maxValue,symbol:e.createSymbol(p,p.color,h?"point":f,a.symbolType,null,n[c]),label:b.label}}),defaultLabel:q?x.other:null,defaultSymbol:q?e.createSymbol(p,p.noDataColor,h?"point":f,a.symbolType,null,t):null,field:c,classificationMethod:k,normalizationType:v,normalizationField:a.normalizationField,normalizationTotal:"percent-of-total"===v?r.normalizationTotal:void 0,legendOptions:a.legendOptions,
authoringInfo:new B({type:"class-breaks-size",classificationMethod:k,standardDeviationInterval:a.standardDeviationInterval})});return"standard-deviation"!==k&&H.setLabelsForClassBreaks({classBreakInfos:c.classBreakInfos,classificationMethod:k,normalizationType:v,round:!0}),d.resolve({renderer:c,sizeScheme:u.cloneScheme(g),classBreaksResult:r,defaultValuesUsed:b.defaultValuesUsed,basemapId:l.basemapId})}function F(a){return K(a).then(function(a){var b,l=a.normalizationField,f=l?"field":void 0;return b=
a.statistics?d.resolve(a.statistics):G({layer:a.layer,field:a.field,valueExpression:a.valueExpression,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:f,normalizationField:l,minValue:a.minValue,maxValue:a.maxValue}),b.then(function(b){var c=a.layer,g=a.field,f=g&&"function"!=typeof g?c.getField(g):null,m=f&&f.type===S,k=c.geometryType,c=C({basemap:a.basemap,geometryType:k,sizeScheme:a.sizeScheme,worldScale:a.worldScale,view:a.view});if(f=c.scheme){var h=D(f,k),q=(m=e.getDefaultDataRange(b,
m,!1))||[b.min,b.max],k=[],p=h[0],h=h[1],n=void 0;"height"===a.axis&&(k.push({type:"size",axis:"width-and-depth",minSize:((h-p)/2+p)/4.6}),n="height",h*=2);k.unshift({type:"size",field:g,valueExpression:a.valueExpression,valueUnit:"unknown",normalizationField:l,axis:n,minSize:p,maxSize:h,minDataValue:q[0],maxDataValue:q[1],legendOptions:a.legendOptions});g=new I({type:"size",minSliderValue:b.min,maxSliderValue:b.max});g=new B({visualVariables:[g]});b=d.resolve({basemapId:c.basemapId,visualVariables:k,
statistics:b,defaultValuesUsed:!!m,sizeScheme:u.cloneScheme(f),authoringInfo:g})}else b=d.reject(e.createError("size-visual-variable:insufficient-info","Unable to find size scheme"));return b})})}Object.defineProperty(t,"__esModule",{value:!0});var S="date",E=Math.pow(2,53)-1;t.createVisualVariables=F;t.createContinuousRenderer=function(a){return L(a).then(function(a){return F(O(a)).then(function(b){var c=a.normalizationField;return P(b,c?"field":void 0,c,a)})})};t.createClassBreaksRenderer=function(a){return M(a).then(function(a){return e.getClassBreaks(N(a)).then(function(b){return R(a,
b)})})}});