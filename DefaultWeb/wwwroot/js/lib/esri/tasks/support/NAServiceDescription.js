//>>built
define(["dojo/_base/declare","dojo/_base/lang","dojo/Deferred","../../request"],function(l,m,p,k){return l(null,{declaredClass:"esri.tasks.support.NAServiceDescription",_sd:null,getServiceDescription:function(h,e){var c=new p;if(this._sd)return c.resolve(this._sd),c.promise;if(this.url&&this.parsedUrl){var b,a=this.url,l=(this.parsedUrl.path.match(/\/solve$/)||[]).length?"Route":(this.parsedUrl.path.match(/\/solveClosestFacility$/)||[]).length?"ClosestFacility":"ServiceAreas",n=function(a){k(a+("/"===
a[a.length-1]?"":"/")+"GetTravelModes/execute",{query:{f:"json",serviceName:l},callbackParamName:"callback"}).then(function(d){var a=[],f=null;if(d&&d.data&&d.data.results&&d.data.results.length){d=d.data;for(var g=0;g<d.results.length;g++)if("supportedTravelModes"===d.results[g].paramName){if(d.results[g].value&&d.results[g].value.features)for(var e=0;e<d.results[g].value.features.length;e++)if(d.results[g].value.features[e].attributes){var h=JSON.parse(d.results[g].value.features[e].attributes.TravelMode);
a.push(h)}}else"defaultTravelMode"===d.results[g].paramName&&(f=d.results[g].value)}b.supportedTravelModes=a;b.defaultTravelMode=f;c.resolve(b)},function(b){console.log("Could not read from the routingUtilities service.");c.reject(b)})};k(a,{query:{f:"json"},callbackParamName:"callback"}).then(function(f){b=f.data;b.supportedTravelModes||(b.supportedTravelModes=[]);for(f=0;f<b.supportedTravelModes.length;f++)b.supportedTravelModes[f].id||(b.supportedTravelModes[f].id=b.supportedTravelModes[f].itemId);
e?c.resolve(b):h?n(h):10.4<=b.currentVersion?k(a+("/"===a[a.length-1]?"":"/")+"retrieveTravelModes",{query:{f:"json"},callbackParamName:"callback"}).then(function(a){b.supportedTravelModes=a.data.supportedTravelModes;b.defaultTravelMode=a.data.defaultTravelMode;c.resolve(b)},function(b){console.log("Could not get to the NAServer's retrieveTravelModes.");c.reject(b)}):k(a.substring(0,a.indexOf("/rest/")+6)+"info",{query:{f:"json"},callbackParamName:"callback"}).then(function(d){d.data.owningSystemUrl?
(a=d.data.owningSystemUrl,k(a+("/"===a[a.length-1]?"":"/")+"sharing/rest/portals/self",{query:{f:"json"},callbackParamName:"callback"}).then(function(a){a&&a.data&&a.data.helperServices&&a.data.helperServices.routingUtilities&&a.data.helperServices.routingUtilities.url?n(a.data.helperServices.routingUtilities.url):(console.log("Portal does not have helperServices.routingUtilities defined."),c.resolve(b))},function(a){console.log("Could not get to the portal's self.");c.reject(a)})):c.resolve(b)},
function(a){console.log("Could not get to the NAServer service description.");c.reject(a)})},function(a){c.reject(a)})}else c.reject("NA Task has no URL specified.");return c.then(m.hitch(this,function(a){this._sd=a}),m.hitch(this,function(){this._sd=null})),c.promise},_isInputGeometryZAware:function(h,e){for(var c=0;c<e.length;c++){var b=h[e[c]];if(b&&b.length)for(var a=0;a<b.length;a++)if(b[a].hasZ)return!0}return!1},_dropZValuesOffInputGeometry:function(h,e){var c,b;for(c=0;c<e.length;c++){var a=
h[e[c]];if(a&&a.length)for(b=0;b<a.length;b++)a[b].z=void 0}console.log("The remote Network Analysis service is powered by a network dataset which is not Z-aware.\nZ-coordinates of the input geometry are ignored.")}})});