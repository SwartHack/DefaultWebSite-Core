//>>built
define("require exports ../../../../core/tsSupport/extendsHelper ../../../input/InputHandler ../../../input/handlers/support ../../state/helpers/PickingHelper ../../state/controllers/global/ZoomController ../../state/controllers/local/ZoomController".split(" "),function(b,f,h,k,l,m,n,p){Object.defineProperty(f,"__esModule",{value:!0});b=function(b){function e(g,d,a){var c=b.call(this,!0)||this;return c.view=g,c.pointerType=d,c.pickingHelper=new m.PickingHelper(g),c.registerIncoming("drag",a,function(a){return c.handleDrag(a)}),
c}return h(e,b),e.prototype.handleDrag=function(b){var d=b.data;if(!(1<d.pointers.length)){var a=d.pointers[0];if(l.eventMatchesMousePointerType(a.startEvent["native"],this.pointerType)){a=[a.currentEvent.x,this.view.height-a.currentEvent.y];switch(d.action){case "start":this.view.state.isGlobal?this.cameraController=new n.ZoomController(this.view,this.pickingHelper):this.cameraController=new p.ZoomController(this.view,this.pickingHelper);this.view.state.switchCameraController(this.cameraController);
this.cameraController.begin(a);break;case "update":this.cameraController.update(a);break;case "end":this.cameraController.end(),this.cameraController=null}b.stopPropagation()}}},e}(k.InputHandler);f.DragZoom=b});