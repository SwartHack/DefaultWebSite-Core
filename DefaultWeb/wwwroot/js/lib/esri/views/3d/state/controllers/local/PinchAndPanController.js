//>>built
define("require exports ../../../../../core/tsSupport/extendsHelper ../../../lib/glMatrix ../../../input/util ../../../webgl-engine/lib/Camera ../InteractiveController ./MomentumController ../../utils/navigationUtils ../../../camera/constraintUtils".split(" "),function(r,m,v,a,t,w,x,y,h,n){Object.defineProperty(m,"__esModule",{value:!0});var p;!function(a){a[a.Vertical=0]="Vertical";a[a.Horizontal=1]="Horizontal"}(p=m.PanMode||(m.PanMode={}));var u=a.vec3d.createFrom(0,0,1),z=16/180*Math.PI;r=function(m){function q(d,
c){var b=m.call(this)||this;return b.view=d,b.pickingHelper=c,b.rotationValueSmooth=new t.ExponentialFalloff(.05),b.scalingValueSmooth=new t.ExponentialFalloff(.05),b.planeHorizontal={normal:a.vec3d.create(),d:0},b.planeVertical={normal:a.vec3d.create(),d:0},b.beginCenterHorizontal=a.vec3d.create(),b.beginCenterVertical=a.vec3d.create(),b.tmpPoints=[],b.beginCenterScreen=a.vec2d.create(),b.tmpCentroid3d=a.vec3d.create(),b.tmpCentroid2d=a.vec2d.create(),b.tmp2d=a.vec2d.create(),b.constraintOptions=
{selection:15,interactionType:0,interactionFactor:0,interactionStartCamera:new w,interactionDirection:null},b.momentumController=new y.MomentumController(d),b}return v(q,m),q.prototype.begin=function(d,c,b){if(this.active){this.beginRadius=c.radius;this.rotationValueSmooth.reset();this.scalingValueSmooth.reset();h.navPointToScreenPoint(this.beginCamera,c.center,this.beginCenterScreen);this.planeHorizontal.d=0;a.vec3d.set(u,this.planeHorizontal.normal);c=a.vec3d.create();this.pickingHelper.pickPointInScreen(this.beginCenterScreen,
c)||this.pickingHelper.pickFreePointInScreen(this.beginCenterScreen,c);b=a.vec3d.create();a.vec3d.negate(this.beginCamera.viewForward,b);var e=a.vec3d.create();a.vec3d.set(u,e);var f=a.vec3d.dot(b,e);this.panMode=Math.asin(0>f?-f:f)>=z?p.Horizontal:p.Vertical;h.setPlaneD(c,this.planeHorizontal);0>a.vec3d.dot(this.planeHorizontal.normal,this.beginCamera.eye)+this.planeHorizontal.d&&(a.vec3d.negate(this.planeHorizontal.normal),this.planeHorizontal.d*=-1);this.panMode===p.Vertical&&(a.vec3d.scale(e,
f),a.vec3d.subtract(b,e,this.planeVertical.normal),a.vec3d.normalize(this.planeVertical.normal),h.setPlaneD(c,this.planeVertical),this.computePlanePoints(d,"currentEvent",this.planeVertical,this.beginCamera,this.tmpPoints),h.centroid(this.tmpPoints,this.beginCenterVertical));this.computePlanePoints(d,"currentEvent",this.planeHorizontal,this.beginCamera,this.tmpPoints);h.centroid(this.tmpPoints,this.beginCenterHorizontal);this.constraintOptions.interactionStartCamera.copyFrom(this.beginCamera)}},q.prototype.update=
function(d,c,b){if(this.active){this.currentCamera.copyFrom(this.beginCamera);var e=1<d.length,f=this.panMode===p.Horizontal?this.planeHorizontal:this.planeVertical,k=this.panMode===p.Horizontal?this.beginCenterHorizontal:this.beginCenterVertical;if(e){var l=this.beginRadius/c.radius,g=.001875*Math.min(Math.max(c.radius,40),120);this.scalingValueSmooth.gain=g;this.scalingValueSmooth.update(l);h.applyZoomToPoint(this.currentCamera,k,this.scalingValueSmooth.value,this.view.state.constraints.minimumPoiDistance);
this.momentumController.addScaleValue(b,this.scalingValueSmooth.value,k);this.constraintOptions.interactionType=1;this.constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(Math.abs(c.radius-this.beginRadius));n.applyAll(this.view,this.currentCamera,this.constraintOptions)}if(this.computePlanePoints(d,"currentEvent",f,this.currentCamera,this.tmpPoints),h.centroid(this.tmpPoints,this.tmpCentroid3d),h.navPointToScreenPoint(this.currentCamera,c.center,this.tmpCentroid2d),h.applyPanPlanar(this.currentCamera,
k,this.tmpCentroid3d,{estimator:this.momentumController,time:b,endScreenPoint:this.tmpCentroid2d}),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(this.beginCenterScreen,this.tmpCentroid2d),n.applyAll(this.view,this.currentCamera,this.constraintOptions),e)d=this.planeHorizontal.normal,a.vec3d.set(this.planeHorizontal.normal,d),e=c.angle,g=this.rotationValueSmooth.value,e=h.normalizeRotationDelta(e-g),e=g+e,g=.00125*Math.min(Math.max(c.radius,
40),120),this.rotationValueSmooth.gain=g,this.rotationValueSmooth.update(e),g=this.rotationValueSmooth.value,this.momentumController.addRotationValue(b,k,d,g),h.applyRotation(this.currentCamera,k,d,g),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=n.pixelDistanceToInteractionFactor(Math.abs(c.radius*g)),n.applyAll(this.view,this.currentCamera,this.constraintOptions);this.currentCamera.markViewDirty()}},q.prototype.end=function(){return this.finishController(),this.momentumController.initiate()?
this.momentumController:null},q.prototype.computePlanePoints=function(d,c,b,e,f){f.length=d.length;for(var k=this.tmp2d,l=0;l<f.length;l++){var g=d[l];k[0]=g[c].x;k[1]=this.view.height-g[c].y;void 0===f[l]&&(f[l]=a.vec3d.create());h.intersectPlaneFromScreenPoint(b,e,k,f[l])}return f},q}(x.InteractiveController);m.PinchAndPanController=r});