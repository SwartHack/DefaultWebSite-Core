//>>built
define(["../../../core/declare","./HeapSort"],function(d,e){return d([],{constructor:function(a,b){if(this.data=Array(a),this.length=0,b){for(var c=0;a>c;c++)this.data[c]=b(c);this._allocator=b;this._hasAllocator=!0}else this._allocator=this._nullAllocator,this._hasAllocator=!1},_nullAllocator:function(){return null},grow:function(a){for(;this.data.length<a;)this.data.push(this._allocator(this.data.length))},next:function(){return this._hasAllocator?(this.data.length===this.length&&this.grow(2*this.length),
this.data[this.length++]):null},swap:function(a,b){var c=this.data[a];this.data[a]=this.data[b];this.data[b]=c},push:function(a){this.data.length===this.length&&this.grow(2*this.length);this.data[this.length++]=a},pushArray:function(a){var b=this.length+a.length;b>=this.data.length&&this.grow(Math.max(2*this.length,b));for(b=0;b<a.length;b++)this.data[this.length++]=a[b]},pushEither:function(a){Array.isArray(a)?this.pushArray(a):this.push(a)},pop:function(){if(0===this.length)return null;var a=this.data[--this.length];
return this._hasAllocator||(this.data[this.length]=null),a},slice:function(a,b){return void 0===b&&(b=this.length),this.data.slice(a,b)},clear:function(){if(!this._hasAllocator)for(var a=0;a<this.length;a++)this.data[a]=null;this.length=0},peek:function(){return 0===this.length?null:this.data[this.length-1]},sort:function(a){return e.sort(this.data,0,this.length,a),this}})});