//>>built
define(["./GeometryData","./BufferVectorMath","./Util","./gl-matrix"],function(B,Q,L,O){function P(a,b,c,e,g){return Math.abs(f.dot(b,a))>g?!1:(f.cross(a,b,c),f.normalize(c),f.cross(c,a,e),f.normalize(e),!0)}var f=O.vec3,Z=O.vec4,R=O.vec3d,l=L.VertexAttrConstants,G=Q.Vec3Compact,H=R.create(),U=R.create(),Y={createSphereGeometry:function(a,b,c,e,g,k,d){a=a||50;e=void 0!==e?e:-Math.PI;g=void 0!==g?g:2*Math.PI;k=void 0!==k?k:.5*-Math.PI;d=void 0!==d?d:Math.PI;var m,h,p=Math.max(3,Math.floor(b)||8),n=
Math.max(2,Math.floor(c)||6),u=(p+1)*(n+1);c=new Float32Array(3*u);b=new Float32Array(3*u);var u=new Float32Array(2*u),v=[],A=f.create(),q=0;for(h=0;n>=h;h++){var t=[],r=h/n,w=k+r*d,C=Math.cos(w);for(m=0;p>=m;m++){var x=m/p,z=e+x*g,N=Math.cos(z)*C*a,D=Math.sin(w)*a,z=-Math.sin(z)*C*a;c[3*q]=N;c[3*q+1]=D;c[3*q+2]=z;f.set3(N,D,z,A);f.normalize(A);b[3*q]=A[0];b[3*q+1]=A[1];b[3*q+2]=A[2];u[2*q]=x;u[2*q+1]=r;t.push(q);++q}v.push(t)}a=new Uint32Array(2*p*(n-1)*3);for(h=q=0;n>h;h++)for(m=0;p>m;m++)e=v[h][m],
g=v[h][m+1],k=v[h+1][m+1],d=v[h+1][m],0===h?(a[q++]=e,a[q++]=k,a[q++]=d):h===n-1?(a[q++]=e,a[q++]=g,a[q++]=k):(a[q++]=e,a[q++]=g,a[q++]=k,a[q++]=k,a[q++]=d,a[q++]=e);L.assert(q===a.length);p={};p[l.POSITION]=a;p[l.NORMAL]=a;p[l.UV0]=a;n={};return n[l.POSITION]={size:3,data:c},n[l.NORMAL]={size:3,data:b},n[l.UV0]={size:2,data:u},new B(n,p)},createPolySphereGeometry:function(a,b,c){function e(c,b){c>b&&(c=b+(b=c,0));var e=c.toString()+"."+b.toString();if(d[e])return d[e];var g=k.length;return k.length+=
3,G.add(k,3*c,k,3*b,k,g),G.scale(k,g,a/G.length(k,g)),g/=3,d[e]=g,g}var g,k;c?(k=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],c=[0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1]):(c=a*(1+Math.sqrt(5))/2,k=[-a,c,0,a,c,0,-a,-c,0,a,-c,0,0,-a,c,0,a,c,0,-a,-c,0,a,-c,c,0,-a,c,0,a,-c,0,-a,-c,0,a],c=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]);for(g=0;g<k.length;g+=3)G.scale(k,g,a/G.length(k,g));var d={};for(g=0;b>g;g++){for(var f=
c.length,h=new Uint32Array(4*f),p=0;f>p;p+=3){var n=c[p],u=c[p+1],v=c[p+2],A=e(n,u),q=e(u,v),t=e(v,n),r=4*p;h[r]=n;h[r+1]=A;h[r+2]=t;h[r+3]=u;h[r+4]=q;h[r+5]=A;h[r+6]=v;h[r+7]=t;h[r+8]=q;h[r+9]=A;h[r+10]=q;h[r+11]=t}c=h;d={}}b=new Float32Array(k);for(g=0;b>g;g+=3)G.normalize(b,g);k=new Float32Array(k);g={};g[l.POSITION]=c;g[l.NORMAL]=c;c={};return c[l.POSITION]={size:3,data:k},c[l.NORMAL]={size:3,data:b},new B(c,g)},createPointGeometry:function(a,b,c,e,g,k,d){var f=new Float32Array(3);f[0]=b?b[0]:
0;f[1]=b?b[1]:0;f[2]=b?b[2]:0;b=new Float32Array(3);if(b[0]=a?a[0]:0,b[1]=a?a[1]:0,b[2]=a?a[2]:1,null==k)a=new Float32Array(2),a[0]=0,a[1]=0;else{a=new Float32Array(k.length);for(var h=0;h<k.length;h++)a[h]=k[h]}k=new Uint8Array(4);k[0]=c?255*c[0]:255;k[1]=c?255*c[1]:255;k[2]=c?255*c[2]:255;k[3]=c&&3<c.length?255*c[3]:255;c=new Float32Array(2);if(c[0]=null!=e&&2==e.length?e[0]:1,c[1]=null!=e&&2==e.length?e[1]:1,null!=g){var p=new Float32Array(4);p[0]=g[0];p[1]=g[1];p[2]=g[2];p[3]=g[3]}if(null!=d){var n=
new Float32Array(4);n[0]=d[0];n[1]=d[1];n[2]=d[2];n[3]=d[3]}h=new Uint32Array(1);h[0]=0;e={};e[l.POSITION]=h;e[l.NORMAL]=h;e[l.UV0]=h;e[l.COLOR]=h;e[l.SIZE]=h;null!=g&&(e[l.AUXPOS1]=h);null!=d&&(e[l.AUXPOS2]=h);h={};return h[l.POSITION]={size:3,data:f},h[l.NORMAL]={size:3,data:b},h[l.UV0]={size:a.length,data:a},h[l.COLOR]={size:4,data:k},h[l.SIZE]={size:2,data:c},null!=g&&(h[l.AUXPOS1]={size:4,data:p}),null!=d&&(h[l.AUXPOS2]={size:4,data:n}),new B(h,e,B.DefaultOffsets,"point")},createPointArrayGeometry:function(a,
b){for(var c=new Float32Array(3*a.length),e=new Float32Array(b?3*a.length:3),g=new Uint32Array(a.length),f=new Uint32Array(a.length),d=0;d<a.length;d++)c[3*d]=a[d][0],c[3*d+1]=a[d][1],c[3*d+2]=a[d][2],b&&(e[3*d]=b[d][0],e[3*d+1]=b[d][1],e[3*d+2]=b[d][2]),g[d]=d,f[d]=0;b||(e[0]=0,e[1]=1,e[2]=0);a=new Float32Array(2);a[0]=0;a[1]=0;d={};d[l.POSITION]=g;d[l.NORMAL]=b?g:f;d[l.UV0]=f;b={};return b[l.POSITION]={size:3,data:c},b[l.NORMAL]={size:3,data:e},b[l.UV0]={size:2,data:a},new B(b,d,B.DefaultOffsets,
"point")},createTriangleGeometry:function(){var a=new Float32Array(9);a[0]=0;a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=100;a[6]=100;a[7]=0;a[8]=0;var b=new Uint32Array(3);b[0]=0;b[1]=1;b[2]=2;var c=new Float32Array(3);c[0]=0;c[1]=1;c[2]=0;var e=new Uint32Array(3);e[0]=0;e[1]=0;e[2]=0;var g=new Float32Array(2);g[0]=0;g[1]=0;var f=new Uint32Array(3);f[0]=0;f[1]=0;f[2]=0;var d={};d[l.POSITION]=b;d[l.NORMAL]=e;d[l.UV0]=f;b={};return b[l.POSITION]={size:3,data:a},b[l.NORMAL]={size:3,data:c},b[l.UV0]={size:2,data:g},
new B(b,d)},createSquareGeometry:function(a){var b,c,e=new Float32Array(12);if(a)for(b=0;4>b;b++)for(c=0;3>c;c++)e[3*b+c]=a[b][c];else e[0]=-1,e[1]=-1,e[2]=0,e[3]=1,e[4]=-1,e[5]=0,e[6]=1,e[7]=1,e[8]=0,e[9]=-1,e[10]=1,e[11]=0;c=new Uint32Array(6);c[0]=0;c[1]=1;c[2]=2;c[3]=2;c[4]=3;c[5]=0;a=new Float32Array(3);a[0]=0;a[1]=0;a[2]=1;var g=new Uint32Array(6);for(b=0;6>b;b++)g[b]=0;b=new Float32Array(8);b[0]=0;b[1]=0;b[2]=1;b[3]=0;b[4]=1;b[5]=1;b[6]=0;b[7]=1;var f=new Uint8Array(4);f[0]=255;f[1]=255;f[2]=
255;f[3]=255;var d={};d[l.POSITION]=c;d[l.NORMAL]=g;d[l.UV0]=c;d[l.COLOR]=g;c={};return c[l.POSITION]={size:3,data:e},c[l.NORMAL]={size:3,data:a},c[l.UV0]={size:2,data:b},c[l.COLOR]={size:4,data:f},new B(c,d)},createBoxGeometry:function(){var a,b,c=[[-.5,-.5,.5],[.5,-.5,.5],[.5,.5,.5],[-.5,.5,.5],[-.5,-.5,-.5],[.5,-.5,-.5],[.5,.5,-.5],[-.5,.5,-.5]],e=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],g=[0,0,1,0,1,1,0,1],f=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],d=Array(36);
for(a=0;6>a;a++)for(b=0;6>b;b++)d[6*a+b]=a;var m=Array(36);for(a=0;6>a;a++)m[6*a+0]=0,m[6*a+1]=1,m[6*a+2]=2,m[6*a+3]=2,m[6*a+4]=3,m[6*a+5]=0;return function(a){var b;Array.isArray(a)||(a=[a,a,a]);var k=new Float32Array(24);for(b=0;8>b;b++)k[3*b]=c[b][0]*a[0],k[3*b+1]=c[b][1]*a[1],k[3*b+2]=c[b][2]*a[2];a={};a[l.POSITION]=new Uint32Array(f);a[l.NORMAL]=new Uint32Array(d);a[l.UV0]=new Uint32Array(m);b={};return b[l.POSITION]={size:3,data:k},b[l.NORMAL]={size:3,data:new Float32Array(e)},b[l.UV0]={size:2,
data:new Float32Array(g)},new B(b,a)}}(),createDiamondGeometry:function(){var a=[[-.5,0,-.5],[.5,0,-.5],[.5,0,.5],[-.5,0,.5],[0,-.5,0],[0,.5,0]],b=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],c=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],e=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];return function(g){var f;Array.isArray(g)||(g=[g,g,g]);var d=new Float32Array(18);for(f=0;6>f;f++)d[3*f]=a[f][0]*g[0],d[3*f+1]=a[f][1]*g[1],d[3*f+2]=a[f][2]*g[2];g={};g[l.POSITION]=new Uint32Array(c);
g[l.NORMAL]=new Uint32Array(e);f={};return f[l.POSITION]={size:3,data:d},f[l.NORMAL]={size:3,data:new Float32Array(b)},new B(f,g)}}(),createTetrahedronGeometry:function(){var a=f.createFrom(-.5,0,-.5),b=f.createFrom(.5,0,-.5),c=f.createFrom(0,0,.5),e=f.createFrom(0,.5,0),g=f.create(),k=f.create(),d=f.create(),m=f.create(),h=f.create();f.subtract(a,e,g);f.subtract(a,b,k);f.cross(g,k,d);f.normalize(d,d);f.subtract(b,e,g);f.subtract(b,c,k);f.cross(g,k,m);f.normalize(m,m);f.subtract(c,e,g);f.subtract(c,
a,k);f.cross(g,k,h);f.normalize(h,h);var p=[a,b,c,e],n=[0,-1,0,d[0],d[1],d[2],m[0],m[1],m[2],h[0],h[1],h[2]],u=[0,1,2,3,1,0,3,2,1,3,0,2],v=[0,0,0,1,1,1,2,2,2,3,3,3];return function(a){var b;Array.isArray(a)||(a=[a,a,a]);var c=new Float32Array(12);for(b=0;4>b;b++)c[3*b]=p[b][0]*a[0],c[3*b+1]=p[b][1]*a[1],c[3*b+2]=p[b][2]*a[2];a={};a[l.POSITION]=new Uint32Array(u);a[l.NORMAL]=new Uint32Array(v);b={};return b[l.POSITION]={size:3,data:c},b[l.NORMAL]={size:3,data:new Float32Array(n)},new B(b,a)}}(),createConeGeometry:function(a,
b,c,e){var g=0,k=f.createFrom(0,g,0),d=f.createFrom(0,g+a,0),m=f.createFrom(0,-1,0),h=f.createFrom(0,1,0);e&&(g=a,d=f.createFrom(0,0,0),k=f.createFrom(0,g,0),m=f.createFrom(0,1,0),h=f.createFrom(0,-1,0));var k=[d,k],m=[m,h],h=c+2,p=0,d=Math.sqrt(a*a+b*b);if(e)for(e=c-1;0<=e;e--)p=2*Math.PI/c*e,n=f.createFrom(Math.cos(p)*b,g,Math.sin(p)*b),k.push(n),p=f.createFrom(a*Math.cos(p)/d,-b/d,a*Math.sin(p)/d),m.push(p);else for(e=0;c>e;e++){var p=2*Math.PI/c*e,n=f.createFrom(Math.cos(p)*b,g,Math.sin(p)*b);
k.push(n);p=f.createFrom(a*Math.cos(p)/d,b/d,a*Math.sin(p)/d);m.push(p)}a=new Uint32Array(6*(c+2));c=new Uint32Array(6*(c+2));g=b=0;for(e=3;e<k.length;e++)a[b++]=1,a[b++]=e-1,a[b++]=e,c[g++]=0,c[g++]=0,c[g++]=0;a[b++]=k.length-1;a[b++]=2;a[b++]=1;c[g++]=0;c[g++]=0;c[g++]=0;for(e=3;e<k.length;e++)a[b++]=e,a[b++]=e-1,a[b++]=0,c[g++]=e,c[g++]=e-1,c[g++]=1;a[b++]=0;a[b++]=2;a[b++]=k.length-1;c[g++]=1;c[g++]=2;c[g++]=m.length-1;g=1;Array.isArray(g)||(g=[g,g,g]);b=new Float32Array(3*h);for(e=0;h>e;e++)b[3*
e]=k[e][0]*g[0],b[3*e+1]=k[e][1]*g[1],b[3*e+2]=k[e][2]*g[2];k=new Float32Array(3*h);for(e=0;h>e;e++)k[3*e]=m[e][0],k[3*e+1]=m[e][1],k[3*e+2]=m[e][2];m={};m[l.POSITION]=a;m[l.NORMAL]=c;h={};return h[l.POSITION]={size:3,data:b},h[l.NORMAL]={size:3,data:k},new B(h,m)},createCylinderGeometry:function(a,b,c,e,g,k){e||(e=f.createFrom(1,0,0));g||(g=f.createFrom(0,0,0));k=void 0===k?!0:k;var d=f.create();f.normalize(e,d);e=f.create();f.scale(d,Math.abs(a),e);var m=f.create();f.scale(e,-.5,m);f.add(m,g);var h=
f.createFrom(0,1,0);Math.abs(.2>1-f.dot(d,h))&&f.set3(0,0,1,h);var p=f.create();f.cross(d,h,p);f.normalize(p);f.cross(p,d,h);var n=2*c+(k?2:0),u=c+(k?2:0);g=new Float32Array(3*n);a=new Float32Array(3*u);var v=new Float32Array(2*n),A=new Uint32Array(3*c*(k?4:2)),q=new Uint32Array(3*c*(k?4:2));k&&(g[3*(n-2)+0]=m[0],g[3*(n-2)+1]=m[1],g[3*(n-2)+2]=m[2],v[2*(n-2)]=0,v[2*(n-2)+1]=0,g[3*(n-1)+0]=g[3*(n-2)+0]+e[0],g[3*(n-1)+1]=g[3*(n-2)+1]+e[1],g[3*(n-1)+2]=g[3*(n-2)+2]+e[2],v[2*(n-1)]=1,v[2*(n-1)+1]=1,a[3*
(u-2)+0]=-d[0],a[3*(u-2)+1]=-d[1],a[3*(u-2)+2]=-d[2],a[3*(u-1)+0]=d[0],a[3*(u-1)+1]=d[1],a[3*(u-1)+2]=d[2]);for(var t,r=function(a,b,c){A[a]=b;q[a]=c},w=0,C=f.create(),x=f.create(),d=0;c>d;d++)t=2*Math.PI/c*d,f.scale(h,Math.sin(t),C),f.scale(p,Math.cos(t),x),f.add(C,x),a[3*d+0]=C[0],a[3*d+1]=C[1],a[3*d+2]=C[2],f.scale(C,b),f.add(C,m),g[3*d+0]=C[0],g[3*d+1]=C[1],g[3*d+2]=C[2],v[2*d+0]=d/c,v[2*d+1]=0,g[3*(d+c)+0]=g[3*d+0]+e[0],g[3*(d+c)+1]=g[3*d+1]+e[1],g[3*(d+c)+2]=g[3*d+2]+e[2],v[2*(d+c)+0]=d/c,v[2*
d+1]=1,t=(d+1)%c,r(w++,d,d),r(w++,d+c,d),r(w++,t,t),r(w++,t,t),r(w++,d+c,d),r(w++,t+c,t);if(k){for(d=0;c>d;d++)t=(d+1)%c,r(w++,n-2,u-2),r(w++,d,u-2),r(w++,t,u-2);for(d=0;c>d;d++)t=(d+1)%c,r(w++,d+c,u-1),r(w++,n-1,u-1),r(w++,t+c,u-1)}b={};b[l.POSITION]=A;b[l.NORMAL]=q;b[l.UV0]=A;c={};return c[l.POSITION]={size:3,data:g},c[l.NORMAL]={size:3,data:a},c[l.UV0]={size:2,data:v},new B(c,b)},createTubeGeometry:function(a,b,c,e,f){c=c||10;e=null!=e?e:!0;L.assert(1<a.length);for(var g=[],d=[],m=0;c>m;m++){g.push([0,
-m-1,-((m+1)%c)-1]);var h=m/c*2*Math.PI;d.push([Math.cos(h)*b,Math.sin(h)*b])}return Y.createPathExtrusionGeometry(d,a,[[0,0,0]],g,e,f)},createPathExtrusionGeometry:function(a,b,c,e,g,k){var d,m=a.length,h=new Float32Array(b.length*m*3+(6*c.length||0)),p=new Float32Array(b.length*m+(2*c.length||0)),n=new Float32Array(b.length*m*3+(c?6:0)),u=0,v=0,A=0,q=(b.length-1)*m*6+6*e.length,t=new Uint32Array(q),q=new Uint32Array(q),r=0,w=0,C=f.create(),x=f.create(),z=f.create(),N=f.create(),D=(f.create(),f.create()),
y=(f.create(),f.create(),f.create()),G=f.create(),E=f.create(),H=f.create(),M=f.create(),O=(f.create(),f.create(),f.create()),V=f.create(),Q=f.create(),S=Z.create();f.set3(0,1,0,H);f.subtract(b[1],b[0],x);f.normalize(x);g?(f.add(b[0],k,E),f.normalize(E,z)):f.set3(0,0,1,z);P(x,z,D,z,.99619469809)||P(x,H,D,z,.99619469809)||P(x,H,D,z,.99619469809);f.set(z,N);f.set(D,V);for(d=0;d<c.length;d++)f.scale(D,c[d][0],y),f.scale(z,c[d][2],E),f.add(y,E),f.add(y,b[0]),h[u++]=y[0],h[u++]=y[1],h[u++]=y[2],p[A++]=
0;n[v++]=-x[0];n[v++]=-x[1];n[v++]=-x[2];for(d=0;d<e.length;d++)t[r++]=0<e[d][0]?e[d][0]:-e[d][0]-1+c.length,t[r++]=0<e[d][1]?e[d][1]:-e[d][1]-1+c.length,t[r++]=0<e[d][2]?e[d][2]:-e[d][2]-1+c.length,q[w++]=0,q[w++]=0,q[w++]=0;var T,I=c.length;d=c.length-1;for(var J=0;J<b.length;J++){if(T=!1,0<J){f.set(x,C);J<b.length-1?(f.subtract(b[J+1],b[J],x),f.normalize(x)):T=!0;f.add(C,x,M);f.normalize(M);f.add(b[J-1],N,O);S[0]=M[0];S[1]=M[1];S[2]=M[2];S[3]=-R.dot(M,b[J]);if(L.rayPlane(O,C,S,E))f.subtract(E,
b[J]),f.normalize(E,z),f.cross(M,z,D),f.normalize(D);else{var F=M,K=V,U=H,W=D,X=z;P(F,N,W,X,.99619469809)||P(F,K,W,X,.99619469809)||P(F,U,W,X,.99619469809)}f.set(z,N);f.set(D,V)}g&&(f.add(b[J],k,E),f.normalize(E,Q));for(F=0;m>F;F++)if(f.scale(D,a[F][0],y),f.scale(z,a[F][1],E),f.add(y,E),f.normalize(y,G),n[v++]=G[0],n[v++]=G[1],n[v++]=G[2],g?p[A++]=f.dot(y,Q):p[A++]=y[2],f.add(y,b[J]),h[u++]=y[0],h[u++]=y[1],h[u++]=y[2],!T)for(K=(F+1)%m,t[r++]=I+F,t[r++]=I+m+F,t[r++]=I+K,t[r++]=I+K,t[r++]=I+m+F,t[r++]=
I+m+K,K=0;6>K;K++)q[w++]=t[r-6+K]-d;I+=m}T=b[b.length-1];for(d=0;d<c.length;d++)f.scale(D,c[d][0],y),f.scale(z,c[d][1],E),f.add(y,E),f.add(y,T),h[u++]=y[0],h[u++]=y[1],h[u++]=y[2],p[A++]=0;a=v/3;n[v++]=x[0];n[v++]=x[1];n[v++]=x[2];m=I-m;for(d=0;d<e.length;d++)t[r++]=0<=e[d][0]?I+e[d][0]:-e[d][0]-1+m,t[r++]=0<=e[d][2]?I+e[d][2]:-e[d][2]-1+m,t[r++]=0<=e[d][1]?I+e[d][1]:-e[d][1]-1+m,q[w++]=a,q[w++]=a,q[w++]=a;e={};e[l.POSITION]=t;e[l.NORMAL]=q;t={};return t[l.POSITION]={size:3,data:h},t.zOffset={size:1,
data:p},t[l.NORMAL]={size:3,data:n},new B(t,e)},createPolylineGeometry:function(a,b){L.assert(1<a.length,"createPolylineGeometry(): polyline needs at least 2 points");L.assert(3===a[0].length,"createPolylineGeometry(): malformed vertex");L.assert(void 0===b||b.length===a.length,"createPolylineGeometry: need same number of points and normals");L.assert(void 0===b||3===b[0].length,"createPolylineGeometry(): malformed normal");for(var c=new Float32Array(3*a.length),e=new Uint32Array(2*(a.length-1)),
f=0,k=0,d=0;d<a.length;d++){for(var m=0;3>m;m++)c[f++]=a[d][m];0<d&&(e[k++]=d-1,e[k++]=d)}f={};k={};if(f[l.POSITION]=e,k[l.POSITION]={size:3,data:c},b){for(var c=new Float32Array(3*b.length),h=0,d=0;d<a.length;d++)for(m=0;3>m;m++)c[h++]=b[d][m];f[l.NORMAL]=e;k[l.NORMAL]={size:3,data:c}}return new B(k,f,B.DefaultOffsets,"line")},addVertexColors:function(a,b){var c,e=b||[1,1,1,1];b=new Uint8Array(4);b[0]=255*e[0];b[1]=255*e[1];b[2]=255*e[2];b[3]=255*(3<e.length?e[3]:1);var e={},f=a.getVertexAttr();
for(c in f)e[c]=f[c];e[l.COLOR]={size:4,data:b};b={};for(c in a.indices)b[c]=a.indices[c];return b[l.COLOR]=new Uint32Array(b[l.POSITION].length),a=new B(e,b,a.componentOffsets,a.primitiveType)},addNormals:function(a){var b=a.getVertexAttr();a=a.indices;for(var c=Q.Vec3Compact.subtract,e=new Float32Array(a.position.length/3*3),f=b.position.data,k=0,d=a.position,m=new Uint32Array(d.length),h=0;h<d.length;h+=3){c(f,3*d[h],f,3*d[h+2],U,0);c(f,3*d[h],f,3*d[h+1],H,0);R.cross(H,U);R.normalize(H);var l=
k/3;e[k++]=H[0];e[k++]=H[1];e[k++]=H[2];m[h]=l;m[h+1]=l;m[h+2]=l}b.normal={size:3,data:e};a.normal=m},cgToGIS:function(a){var b,c;b=a.getVertexAttr();a=b.position.data;var e=b.normal.data;if(e)for(b=0;b<e.length;b+=3)c=e[b+1],e[b+1]=-e[b+2],e[b+2]=c;if(a)for(b=0;b<a.length;b+=3)c=a[b+1],a[b+1]=-a[b+2],a[b+2]=c}};return Y});