//>>built
define(["require","exports","./Octree","./gl-matrix"],function(q,f,k,p){function l(c,a){void 0===a&&(a=!1);var b,d=c instanceof k?c.root:c;return b={},c instanceof k&&(a&&(b.center=h.create(c.center),b.size=c.size),0!==c.outsiders.length&&(b.outsiders=c.outsiders.map(function(a){return a.getId()}))),0<d.terminals.length&&(b.terminals=d.terminals.map(function(a){return a.getId()})),null!==d.residents&&0<d.residents.length&&(b.residents=d.residents.map(function(a){return a.getId()})),null===d.residents&&
d.children.forEach(function(a,c){a&&(b["child"+c]=l(a))}),b}function m(c,a,b,d){for(var g=c.getCenter(),e=0;3>e;e++)if(g[e]<a[e]||g[e]>b[e])throw Error("[Octree Validation] Object is not within node bounds");a=.25*(b[0]-a[0]);c=c.getBSRadius();if(d&&a>c)throw Error("[Octree Validation] Object is too small to be a terminal");if(!d&&c>a)throw Error("[Octree Validation] Object is too large to be a resident");}function n(c,a,b){return b=b||c,b[0]=c[0]+a,b[1]=c[1]+a,b[2]=c[2]+a,b}Object.defineProperty(f,
"__esModule",{value:!0});var h=p.vec3d;f.stats=function(c){var a={numNodes:0,numObjects:0,numTerminals:0,numResidents:0,numOutsiders:0,numInnerNodes:0,numTerminalNodes:0,maximumDepth:0,maxNumTerminals:0,maxNumResidents:0,maxNumObjects:0};return a.numOutsiders=c.outsiders.length,c.forEachNode(function(b,d,g){null===b.residents?a.numInnerNodes++:a.numTerminalNodes++;a.numTerminals+=b.terminals.length;a.maxNumTerminals=Math.max(b.terminals.length,a.maxNumTerminals);d=b.terminals.length;null!==b.residents&&
(a.numResidents+=b.residents.length,a.maxNumResidents=Math.max(b.residents.length,a.maxNumResidents),d+=b.residents.length);a.maxNumObjects=Math.max(d,a.maxNumObjects);return a.maximumDepth=Math.max(a.maximumDepth,Math.round(Math.log(c.size/g)*Math.LOG2E)),!0}),a.numObjects=a.numOutsiders+a.numTerminals+a.numResidents,a.numNodes=a.numInnerNodes+a.numTerminalNodes,a};f.debugDump=l;f.assert=function(c){return c.forEachNode(function(a,b,d){var g=n(b,-d/2,h.create()),e=n(b,d/2,h.create());if(a.terminals.forEach(function(a){return m(a,
g,e,!0)}),null!==a.residents){if(a.residents.length>c.maximumObjectsPerNode)throw Error("[Octree Validation] Number of objects "+a.residents.length+" exceeds maximum allowed ("+c.maximumObjectsPerNode+")");a.residents.forEach(function(a){return m(a,g,e,!1)})}var f=!1;if(a.children.forEach(function(b){if(b&&(f=!0,null!==a.residents))throw Error("[Octree Validation] Node has residents and children");}),!f&&(null===a.residents||0===a.residents.length)&&0===a.terminals.length)throw Error("[Octree Validation] dangling empty node");
return!0}),!0}});