//>>built
var RTree=function(a){var e=3,p=6;isNaN(a)||(e=Math.floor(a/2),p=a);this.min_width=e;this.max_width=p;var k={x:0,y:0,w:0,h:0,id:"root",nodes:[]},m=(function(){var d={};return function(c){var b=0;return c in d?b=d[c]++:d[c]=0,c+"_"+b}}(),function(d,c,b){var a=[],t=[],u=[];if(!d||!RTree.Rectangle.overlap_rectangle(d,b))return u;d={x:d.x,y:d.y,w:d.w,h:d.h,target:c};t.push(b.nodes.length);a.push(b);do if(b=a.pop(),c=t.pop()-1,"target"in d)for(;0<=c;){var f=b.nodes[c];if(RTree.Rectangle.overlap_rectangle(d,
f)){if(d.target&&"leaf"in f&&f.leaf===d.target||!d.target&&("leaf"in f||RTree.Rectangle.contains_rectangle(f,d))){"nodes"in f?(u=n(f,!0,[],f),b.nodes.splice(c,1)):u=b.nodes.splice(c,1);RTree.Rectangle.make_MBR(b.nodes,b);delete d.target;b.nodes.length<e&&(d.nodes=n(b,!0,[],b));break}"nodes"in f&&(t.push(c),a.push(b),b=f,c=f.nodes.length)}--c}else if("nodes"in d){b.nodes.splice(c+1,1);0<b.nodes.length&&RTree.Rectangle.make_MBR(b.nodes,b);for(c=0;c<d.nodes.length;c++)l(d.nodes[c],b);d.nodes.length=
0;0===a.length&&1>=b.nodes.length?(d.nodes=n(b,!0,d.nodes,b),b.nodes.length=0,a.push(b),t.push(1)):0<a.length&&b.nodes.length<e?(d.nodes=n(b,!0,d.nodes,b),b.nodes.length=0):delete d.nodes}else RTree.Rectangle.make_MBR(b.nodes,b);while(0<a.length);return u}),n=function(d,c,b,a){var g=[];if(!RTree.Rectangle.overlap_rectangle(d,a))return b;g.push(a.nodes);do{a=g.pop();for(var e=a.length-1;0<=e;e--){var f=a[e];RTree.Rectangle.overlap_rectangle(d,f)&&("nodes"in f?g.push(f.nodes):"leaf"in f&&(c?b.push(f):
b.push(f.leaf)))}}while(0<g.length);return b},l=function(a,c){var b;if(0===c.nodes.length)return c.x=a.x,c.y=a.y,c.w=a.w,c.h=a.h,void c.nodes.push(a);var g,d=-1,k=[];k.push(c);c=c.nodes;do{-1!==d&&(k.push(c[d]),c=c[d].nodes,d=-1);for(var f=c.length-1;0<=f;f--){var h=c[f];if("leaf"in h){d=-1;break}var r=RTree.Rectangle.squarified_ratio(h.w,h.h,h.nodes.length+1),h=RTree.Rectangle.squarified_ratio(Math.max(h.x+h.w,a.x+a.w)-Math.min(h.x,a.x),Math.max(h.y+h.h,a.y+a.h)-Math.min(h.y,a.y),h.nodes.length+
2);(0>d||Math.abs(h-r)<g)&&(g=Math.abs(h-r),d=f)}}while(-1!==d);do{if(b&&"nodes"in b&&0===b.nodes.length)for(g=b,b=k.pop(),d=0;d<b.nodes.length;d++){if(b.nodes[d]===g||0===b.nodes[d].nodes.length){b.nodes.splice(d,1);break}}else b=k.pop();if("leaf"in a||"nodes"in a||Array.isArray(a)){if(Array.isArray(a)){for(g=0;g<a.length;g++)RTree.Rectangle.expand_rectangle(b,a[g]);b.nodes=b.nodes.concat(a)}else RTree.Rectangle.expand_rectangle(b,a),b.nodes.push(a);if(b.nodes.length<=p)a={x:b.x,y:b.y,w:b.w,h:b.h};
else{g=a=b.nodes;c=d=void 0;for(var f=g.length-1,r=0,h=g.length-1,l=0,m=g.length-2;0<=m;m--){var n=g[m];n.x>g[r].x?r=m:n.x+n.w<g[f].x+g[f].w&&(f=m);n.y>g[l].y?l=m:n.y+n.h<g[h].y+g[h].h&&(h=m)}for(g=(Math.abs(g[f].x+g[f].w-g[r].x)>Math.abs(g[h].y+g[h].h-g[l].y)?f>r?(d=g.splice(f,1)[0],c=g.splice(r,1)[0]):(c=g.splice(r,1)[0],d=g.splice(f,1)[0]):h>l?(d=g.splice(h,1)[0],c=g.splice(l,1)[0]):(c=g.splice(l,1)[0],d=g.splice(h,1)[0]),[{x:d.x,y:d.y,w:d.w,h:d.h,nodes:[d]},{x:c.x,y:c.y,w:c.w,h:c.h,nodes:[c]}]);0<
a.length;){d=a;c=g[0];for(var f=g[1],r=l=h=void 0,m=RTree.Rectangle.squarified_ratio(c.w,c.h,c.nodes.length+1),n=RTree.Rectangle.squarified_ratio(f.w,f.h,f.nodes.length+1),v=d.length-1;0<=v;v--){var q=d[v],w=Math.abs(RTree.Rectangle.squarified_ratio(Math.max(c.x+c.w,q.x+q.w)-Math.min(c.x,q.x),Math.max(c.y+c.h,q.y+q.h)-Math.min(c.y,q.y),c.nodes.length+2)-m),q=Math.abs(RTree.Rectangle.squarified_ratio(Math.max(f.x+f.w,q.x+q.w)-Math.min(f.x,q.x),Math.max(f.y+f.h,q.y+q.h)-Math.min(f.y,q.y),f.nodes.length+
2)-n);(!l||!h||Math.abs(q-w)<h)&&(l=v,h=Math.abs(q-w),r=w>q?f:c)}h=d.splice(l,1)[0];c.nodes.length+d.length+1<=e?(c.nodes.push(h),RTree.Rectangle.expand_rectangle(c,h)):f.nodes.length+d.length+1<=e?(f.nodes.push(h),RTree.Rectangle.expand_rectangle(f,h)):(r.nodes.push(h),RTree.Rectangle.expand_rectangle(r,h))}a=g;1>k.length&&(b.nodes.push(g[0]),k.push(b),a=g[1])}}else RTree.Rectangle.expand_rectangle(b,a),a={x:b.x,y:b.y,w:b.w,h:b.h}}while(0<k.length)};this.serialize=function(){return JSON.stringify(k)};
this.deserialize=function(a,c){var b=c=c||k;b.nodes=a.nodes;b.x=a.x;b.y=a.y;b.w=a.w;b.h=a.h;return c};this.search=function(a,c){c=[a,!!c,[],k];if(void 0===a)throw"Wrong number of arguments. RT.Search requires at least a bounding rectangle.";return n.apply(this,c)};this.remove=function(a,c){var b=Array.prototype.slice.call(arguments);if(1===b.length&&b.push(!1),b.push(k),!1===c){var d=0,e=[];do d=e.length,e=e.concat(m.apply(this,b));while(d!==e.length);return e}return m.apply(this,b)};this.insert=
function(a,c){if(2>arguments.length)throw"Wrong number of arguments. RT.Insert requires at least a bounding rectangle and an object.";return l({x:a.x,y:a.y,w:a.w,h:a.h,leaf:c},k),k}};
RTree.Rectangle=function(a,e,p,k){var m,n,l,d,c,b;a.x?(m=a.x,l=a.y,0!==a.w&&!a.w&&a.x2?(c=a.x2-a.x,b=a.y2-a.y):(c=a.w,b=a.h),n=m+c,d=l+b):(m=a,l=e,c=p,b=k,n=m+c,d=l+b);this.x1=this.x=function(){return m};this.y1=this.y=function(){return l};this.x2=function(){return n};this.y2=function(){return d};this.w=function(){return c};this.h=function(){return b};this.toJSON=function(){return'{"x":'+m.toString()+', "y":'+l.toString()+', "w":'+c.toString()+', "h":'+b.toString()+"}"};this.overlap=function(a){return this.x()<
a.x2()&&this.x2()>a.x()&&this.y()<a.y2()&&this.y2()>a.y()};this.expand=function(a){var d=Math.min(this.x(),a.x()),e=Math.min(this.y(),a.y());return c=Math.max(this.x2(),a.x2())-d,b=Math.max(this.y2(),a.y2())-e,m=d,l=e,this};this.setRect=function(a,b,c,d){}};RTree.Rectangle.overlap_rectangle=function(a,e){return a.x<e.x+e.w&&a.x+a.w>e.x&&a.y<e.y+e.h&&a.y+a.h>e.y};RTree.Rectangle.contains_rectangle=function(a,e){return a.x+a.w<=e.x+e.w&&a.x>=e.x&&a.y+a.h<=e.y+e.h&&a.y>=e.y};
RTree.Rectangle.expand_rectangle=function(a,e){var p,k;return p=a.x<e.x?a.x:e.x,k=a.y<e.y?a.y:e.y,a.x+a.w>e.x+e.w?a.w=a.x+a.w-p:a.w=e.x+e.w-p,a.y+a.h>e.y+e.h?a.h=a.y+a.h-k:a.h=e.y+e.h-k,a.x=p,a.y=k,a};RTree.Rectangle.make_MBR=function(a,e){if(1>a.length)return{x:0,y:0,w:0,h:0};e?(e.x=a[0].x,e.y=a[0].y,e.w=a[0].w,e.h=a[0].h):e={x:a[0].x,y:a[0].y,w:a[0].w,h:a[0].h};for(var p=a.length-1;0<p;p--)RTree.Rectangle.expand_rectangle(e,a[p]);return e};
RTree.Rectangle.squarified_ratio=function(a,e,p){var k=(a+e)/2;a*=e;return a*p/(a/(k*k))};